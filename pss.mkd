
# Provable Safe Subset


## Preconditions

* No pointer is used by another thread
* Pointers to functions are pointers to safe functions
* Pointer to arrays declared with static are correct

## Constraints

### Static

* No casts (*)
* No implicit conversions to void
* No calls to functions without prototypes
* No sizeof on pointer declared on array
* No sizeof on struct with flexible-array member
* No end-of-function returns for functions returning a value
* No unions (*)
* No stores of pointers
* No returns of pointers
* No goto into scope of variables
* No thread creation (*)
* No variadic calls or callees (*)
* No setjmp/longjmp
* No access to external objects

### State-Dependent

* No VLAs on the stack (*)
* No unhandled switch cases
* No address of potentially uninitialized variables
* No read of uninitialized variable
* No pointer arithmetic
  * except with constant within known bounds
  * except array access within known bound
  
## State

Tracked per source statement. Changes tracket until 

All automatic variables:
* initialized / not-known-to-be-initialized

Integers:
* Parameter range

Pointers:
* Bounds
* Non-null / not-known-to-be-non-null

## Examples

```
int foo(int i, int N, int a[static N])
{
  if ((0 <= i) && (i < N))
    retun a[i];
  return 0;
}
```
